package gg.jte.generated;
import Presentation.Model.PresentationUser;
public final class JteregisterGenerated {
	public static final String JTE_NAME = "register.jte";
	public static final int[] JTE_LINE_INFO = {0,0,1,1,1,72,72};
	public static void render(gg.jte.html.HtmlTemplateOutput jteOutput, gg.jte.html.HtmlInterceptor jteHtmlInterceptor, PresentationUser r_user) {
		jteOutput.writeContent("\r\n\r\n@template.NavBar(user = r_user)\r\n\r\n<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\"\r\n          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n    <title>SignIn</title>\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n          integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\r\n</head>\r\n<body>\r\n<main class=\"container align-content-center\">\r\n    <div class=\"container col-5 mt-5 border\">\r\n        <div class=\"container col-4 mt-3\">\r\n            <h1 class=\"fs-2 fw-bold\">Register</h1>\r\n        </div>\r\n        <div class=\"container mb-5\">\r\n            <form method=\"post\" name=\"registerForm\" class=\"form\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"userName\" class=\"form-label\">Username</label>\r\n                    <input type=\"text\" name=\"username\" class=\"form-control\" id=\"userName\" placeholder=\"username\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"password\" class=\"form-label\">Password</label>\r\n                    <input type=\"password\" name=\"username\" class=\"form-control\" id=\"password\" placeholder=\"password\">\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <button type=\"button\" id=\"submitButton\" class=\"btn btn-success\">Register</button>\r\n                    <a href=\"/\" class=\"btn btn-danger\">Cancel</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div id=\"responsePlace\" class=\"container mt-5 col-4 visually-hidden\">\r\n        <p class=\"fs-5\"></p>\r\n    </div>\r\n\r\n</main>\r\n</body>\r\n<script type=\"javascript\">\r\n    const socket = new WebSocket(\"wss://localhost:8080/users/new\")\r\n    const button = document.querySelector('#submitButton');\r\n    button.addEventListener('click', function () {\r\n        const form = document.registerForm;\r\n        const message = {username: form.username.value, password: form.password.value};\r\n        socket.send(JSON.stringify(message));\r\n    });\r\n    socket.onmessage = async function (event) {\r\n        const response = JSON.parse(event.data);\r\n        if (!response.errorMessage) {\r\n            const toUpdate = document.getElementById(\"responsePlace\");\r\n            toUpdate.firstChild.textContent = \"The user was created\";\r\n            toUpdate.classList.add(\"border\", \"border-success\", \"border-3\", \"rounded\");\r\n            toUpdate.classList.remove(\"visually-hidden\");\r\n            await new Promise(r => setTimeout(r, 3000));\r\n            window.location.replace(\"/\");\r\n        }\r\n        const username = document.getElementById(\"userName\");\r\n        username.classList.add(\"border\", \"border-danger\");\r\n        const toUpdate = document.getElementById(\"responsePlace\");\r\n        toUpdate.firstChild.textContent = response.error;\r\n        toUpdate.classList.add(\"border\", \"border-danger\", \"border-3\", \"rounded\");\r\n        toUpdate.classList.remove(\"visually-hidden\");\r\n    }\r\n</script>\r\n</html>");
	}
	public static void renderMap(gg.jte.html.HtmlTemplateOutput jteOutput, gg.jte.html.HtmlInterceptor jteHtmlInterceptor, java.util.Map<String, Object> params) {
		PresentationUser r_user = (PresentationUser)params.get("r_user");
		render(jteOutput, jteHtmlInterceptor, r_user);
	}
}
